# Generated by Django 2.2 on 2019-05-29 18:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import subscription_manager.user.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, verbose_name='Vorname')),
                ('last_name', models.CharField(max_length=150, verbose_name='Nachname')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-Mail-Adresse')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', subscription_manager.user.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(error_messages={'unique': 'Diese E-Mail-Adresse existiert bereits.'}, max_length=100, unique=True, verbose_name='E-Mail-Adresse')),
                ('is_primary', models.BooleanField(default=False, verbose_name='ist primär')),
                ('verified_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='verifiziert am')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='erstellt am')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Account')),
            ],
            options={
                'verbose_name': 'E-Mail-Adresse',
                'verbose_name_plural': 'E-Mail-Adressen',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('verification', 'E-Mail-Adresse verifizieren'), ('login', 'Login'), ('signup', 'Registrierung abschliessen')], max_length=20, verbose_name='Zweck')),
                ('code', models.UUIDField(editable=False, unique=True, verbose_name='Code')),
                ('valid_until', models.DateTimeField(verbose_name='gültig bis')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='gesendet am')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='erstellt am')),
                ('email_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.EmailAddress', verbose_name='E-Mail-Adresse')),
            ],
            options={
                'verbose_name': 'Token',
            },
        ),
    ]
